// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`replaces references with their stringified value replace arrow functions 1`] = `
"\\"use strict\\";

var _workerify = _interopRequireDefault(require(\\"@fadioit/workerify\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError(\\"Invalid attempt to destructure non-iterable instance\\"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\"return\\"] != null) _i[\\"return\\"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var workerFunc = function workerFunc(a, b) {
  var _require = require('some-module')(a, b),
      _require2 = _slicedToArray(_require, 1),
      c = _require2[0];

  return c;
};

(0, _workerify.default)(\\"\\\\\\"use strict\\\\\\";\\\\n\\\\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\\\\n\\\\nfunction _nonIterableRest() { throw new TypeError(\\\\\\"Invalid attempt to destructure non-iterable instance\\\\\\"); }\\\\n\\\\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\\\\"return\\\\\\"] != null) _i[\\\\\\"return\\\\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\\\n\\\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\\\n\\\\n(function (a, b) {\\\\n  var _require = require('some-module')(a, b),\\\\n      _require2 = _slicedToArray(_require, 1),\\\\n      c = _require2[0];\\\\n\\\\n  return c;\\\\n});\\", false);"
`;

exports[`replaces references with their stringified value replace functions 1`] = `
"\\"use strict\\";

var _workerify = _interopRequireDefault(require(\\"@fadioit/workerify\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError(\\"Invalid attempt to destructure non-iterable instance\\"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\"return\\"] != null) _i[\\"return\\"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var workerFunc = function workerFunc(a, b) {
  var _require = require('some-module')(a, b),
      _require2 = _slicedToArray(_require, 1),
      c = _require2[0];

  return c;
};

(0, _workerify.default)(\\"\\\\\\"use strict\\\\\\";\\\\n\\\\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\\\\n\\\\nfunction _nonIterableRest() { throw new TypeError(\\\\\\"Invalid attempt to destructure non-iterable instance\\\\\\"); }\\\\n\\\\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\\\\"return\\\\\\"] != null) _i[\\\\\\"return\\\\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\\\n\\\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\\\n\\\\n(function (a, b) {\\\\n  var _require = require('some-module')(a, b),\\\\n      _require2 = _slicedToArray(_require, 1),\\\\n      c = _require2[0];\\\\n\\\\n  return c;\\\\n});\\", false);"
`;

exports[`replaces references with their stringified value replace generators 1`] = `
"\\"use strict\\";

var _workerify = _interopRequireDefault(require(\\"@fadioit/workerify\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError(\\"Invalid attempt to destructure non-iterable instance\\"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\"return\\"] != null) _i[\\"return\\"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var workerFunc =
/*#__PURE__*/
regeneratorRuntime.mark(function workerFunc(a, b) {
  var _require, _require2, c;

  return regeneratorRuntime.wrap(function workerFunc$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _require = require('some-module')(a, b), _require2 = _slicedToArray(_require, 1), c = _require2[0];
          return _context.abrupt(\\"return\\", c);

        case 2:
        case \\"end\\":
          return _context.stop();
      }
    }
  }, workerFunc, this);
});
(0, _workerify.default)(\\"\\\\\\"use strict\\\\\\";\\\\n\\\\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\\\\n\\\\nfunction _nonIterableRest() { throw new TypeError(\\\\\\"Invalid attempt to destructure non-iterable instance\\\\\\"); }\\\\n\\\\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\\\\"return\\\\\\"] != null) _i[\\\\\\"return\\\\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\\\n\\\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\\\n\\\\n/*#__PURE__*/\\\\nregeneratorRuntime.mark(function _callee(a, b) {\\\\n  var _require, _require2, c;\\\\n\\\\n  return regeneratorRuntime.wrap(function _callee$(_context) {\\\\n    while (1) {\\\\n      switch (_context.prev = _context.next) {\\\\n        case 0:\\\\n          _require = require('some-module')(a, b), _require2 = _slicedToArray(_require, 1), c = _require2[0];\\\\n          return _context.abrupt(\\\\\\"return\\\\\\", c);\\\\n\\\\n        case 2:\\\\n        case \\\\\\"end\\\\\\":\\\\n          return _context.stop();\\\\n      }\\\\n    }\\\\n  }, _callee, this);\\\\n});\\", false);"
`;

exports[`stringifies callback in place stringify arrow functions 1`] = `
"\\"use strict\\";

var _workerify = _interopRequireDefault(require(\\"@fadioit/workerify\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _workerify.default)(\\"\\\\\\"use strict\\\\\\";\\\\n\\\\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\\\\n\\\\nfunction _nonIterableRest() { throw new TypeError(\\\\\\"Invalid attempt to destructure non-iterable instance\\\\\\"); }\\\\n\\\\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\\\\"return\\\\\\"] != null) _i[\\\\\\"return\\\\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\\\n\\\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\\\n\\\\n(function (a, b) {\\\\n  var _require = require('some-module')(a, b),\\\\n      _require2 = _slicedToArray(_require, 1),\\\\n      c = _require2[0];\\\\n\\\\n  return c;\\\\n});\\", false);"
`;

exports[`stringifies callback in place stringify functions 1`] = `
"\\"use strict\\";

var _workerify = _interopRequireDefault(require(\\"@fadioit/workerify\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _workerify.default)(\\"\\\\\\"use strict\\\\\\";\\\\n\\\\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\\\\n\\\\nfunction _nonIterableRest() { throw new TypeError(\\\\\\"Invalid attempt to destructure non-iterable instance\\\\\\"); }\\\\n\\\\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\\\\"return\\\\\\"] != null) _i[\\\\\\"return\\\\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\\\n\\\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\\\n\\\\n(function (a, b) {\\\\n  var _require = require('some-module')(a, b),\\\\n      _require2 = _slicedToArray(_require, 1),\\\\n      c = _require2[0];\\\\n\\\\n  return c;\\\\n});\\", false);"
`;

exports[`stringifies callback in place stringify generators 1`] = `
"\\"use strict\\";

var _workerify = _interopRequireDefault(require(\\"@fadioit/workerify\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _workerify.default)(\\"\\\\\\"use strict\\\\\\";\\\\n\\\\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\\\\n\\\\nfunction _nonIterableRest() { throw new TypeError(\\\\\\"Invalid attempt to destructure non-iterable instance\\\\\\"); }\\\\n\\\\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\\\\"return\\\\\\"] != null) _i[\\\\\\"return\\\\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\\\n\\\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\\\n\\\\n/*#__PURE__*/\\\\nregeneratorRuntime.mark(function _callee(a, b) {\\\\n  var _require, _require2, c;\\\\n\\\\n  return regeneratorRuntime.wrap(function _callee$(_context) {\\\\n    while (1) {\\\\n      switch (_context.prev = _context.next) {\\\\n        case 0:\\\\n          _require = require('some-module')(a, b), _require2 = _slicedToArray(_require, 1), c = _require2[0];\\\\n          return _context.abrupt(\\\\\\"return\\\\\\", c);\\\\n\\\\n        case 2:\\\\n        case \\\\\\"end\\\\\\":\\\\n          return _context.stop();\\\\n      }\\\\n    }\\\\n  }, _callee, this);\\\\n});\\", true);"
`;
